version: "3.7"
services:
  minio:
    image: minio/minio:RELEASE.2023-02-27T18-10-45Z
    container_name: minio
    ports:
      - "9002:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server --console-address ":9001" /data
    networks:
      - trino-network

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      BUCKET_NAME: datalake
      ENDPOINT: http://minio:9000
      ACCESS_KEY: admin
      SECRET_KEY: admin
    entrypoint: >
      /bin/sh -c "
        sleep 10;
        until (/usr/bin/mc config host add myminio $${ENDPOINT} $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD}) do echo '...waiting...' && sleep 1; done;
        /usr/bin/mc mb myminio/$${BUCKET_NAME};
        /usr/bin/mc anonymous set public myminio/$${BUCKET_NAME};
        /usr/bin/mc admin user svcacct add --access-key $${ACCESS_KEY} --secret-key $${SECRET_KEY} myminio minioadmin;
        exit 0;
      "
    networks:
      - trino-network

  postgres:
    container_name: postgres_data_poc
    image: postgres:15.2
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      PGDATA: /data/postgres
      POSTGRES_DB: metastore
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - trino-network

  trino:
    # Using version 413 the iceberg catalog tables is created properly.
    # image: trinodb/trino:413
    image: trinodb/trino:414
    container_name: trino_data_poc
    ports:
      - "8080:8080"
    volumes:
      - ./trino/etc/catalog:/etc/trino/catalog
    networks:
      - trino-network

networks:
  trino-network:
    driver: bridge

volumes:
  minio_storage: {}
  postgres:
